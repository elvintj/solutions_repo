{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Introduction Projectile motion describes the movement of an object under the influence of gravity after an initial launch. The horizontal distance traveled by a projectile, known as its range, depends on several factors, including the initial velocity and angle of projection. This investigation explores the relationship between the launch angle and the range of a projectile. Theory Projectile motion can be analyzed using kinematic equations, considering separate horizontal and vertical components: Horizontal motion: $$ x = v_0 \\cos(\\theta) \\cdot t $$ Vertical motion: $$ y = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ where: - \\( x \\) and \\( y \\) are the horizontal and vertical displacements, - \\( v_0 \\) is the initial velocity, - \\( \\theta \\) is the launch angle, - \\( g \\) is the gravitational acceleration (9.81 m/s\u00b2), - \\( t \\) is the time of flight. Time of Flight The total time a projectile remains in motion before hitting the ground can be found by setting \\( y = 0 \\) : $$ T = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Range of the Projectile The range \\( R \\) is the total horizontal distance covered: $$ R = v_0 \\cos(\\theta) \\cdot T $$ Substituting \\( T \\) : $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ From this equation, the maximum range is achieved when \\( \\sin(2\\theta) \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) . Implementation A Python script can be used to simulate projectile motion and visualize how the range varies with the launch angle. import numpy as np import matplotlib.pyplot as plt def compute_range(v_0, g, angles): \"\"\"Computes the range of a projectile for different launch angles.\"\"\" ranges = (v_0**2 * np.sin(2 * np.radians(angles))) / g return ranges # Parameters v_0 = 25 # Initial velocity (m/s) g = 9.81 # Acceleration due to gravity (m/s\u00b2) angles = np.linspace(0, 90, 100) # Angles from 0 to 90 degrees # Compute ranges ranges = compute_range(v_0, g, angles) # Plot results plt.figure(figsize=(8, 5)) plt.plot(angles, ranges, label=f'v_0 = {v_0} m/s') plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range vs Launch Angle\") plt.legend() plt.grid() plt.show() Practical Applications Understanding projectile motion has applications in various fields, such as: - Sports : Calculating the optimal angle for maximum distance in activities like soccer and javelin throwing. - Engineering : Designing ballistic trajectories in defense and space exploration. - Gaming and Animation : Simulating realistic physics for virtual environments. Conclusion This investigation demonstrated how the range of a projectile depends on the launch angle. The theoretical and computational analyses confirm that the optimal launch angle for maximum range is \\( 45^\\circ \\) . More realistic models could incorporate air resistance and non-uniform gravitational fields to refine these results. Figure 1: Sample Trajectories of Projectile Motion","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#introduction","text":"Projectile motion describes the movement of an object under the influence of gravity after an initial launch. The horizontal distance traveled by a projectile, known as its range, depends on several factors, including the initial velocity and angle of projection. This investigation explores the relationship between the launch angle and the range of a projectile.","title":"Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theory","text":"Projectile motion can be analyzed using kinematic equations, considering separate horizontal and vertical components: Horizontal motion: $$ x = v_0 \\cos(\\theta) \\cdot t $$ Vertical motion: $$ y = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ where: - \\( x \\) and \\( y \\) are the horizontal and vertical displacements, - \\( v_0 \\) is the initial velocity, - \\( \\theta \\) is the launch angle, - \\( g \\) is the gravitational acceleration (9.81 m/s\u00b2), - \\( t \\) is the time of flight.","title":"Theory"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight","text":"The total time a projectile remains in motion before hitting the ground can be found by setting \\( y = 0 \\) : $$ T = \\frac{2 v_0 \\sin(\\theta)}{g} $$","title":"Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-of-the-projectile","text":"The range \\( R \\) is the total horizontal distance covered: $$ R = v_0 \\cos(\\theta) \\cdot T $$ Substituting \\( T \\) : $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ From this equation, the maximum range is achieved when \\( \\sin(2\\theta) \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) .","title":"Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#implementation","text":"A Python script can be used to simulate projectile motion and visualize how the range varies with the launch angle. import numpy as np import matplotlib.pyplot as plt def compute_range(v_0, g, angles): \"\"\"Computes the range of a projectile for different launch angles.\"\"\" ranges = (v_0**2 * np.sin(2 * np.radians(angles))) / g return ranges # Parameters v_0 = 25 # Initial velocity (m/s) g = 9.81 # Acceleration due to gravity (m/s\u00b2) angles = np.linspace(0, 90, 100) # Angles from 0 to 90 degrees # Compute ranges ranges = compute_range(v_0, g, angles) # Plot results plt.figure(figsize=(8, 5)) plt.plot(angles, ranges, label=f'v_0 = {v_0} m/s') plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Projectile Range vs Launch Angle\") plt.legend() plt.grid() plt.show()","title":"Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"Understanding projectile motion has applications in various fields, such as: - Sports : Calculating the optimal angle for maximum distance in activities like soccer and javelin throwing. - Engineering : Designing ballistic trajectories in defense and space exploration. - Gaming and Animation : Simulating realistic physics for virtual environments.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"This investigation demonstrated how the range of a projectile depends on the launch angle. The theoretical and computational analyses confirm that the optimal launch angle for maximum range is \\( 45^\\circ \\) . More realistic models could incorporate air resistance and non-uniform gravitational fields to refine these results. Figure 1: Sample Trajectories of Projectile Motion","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}